// JavaScript started with a small role to play on an otherwise mostly HTML web. Today, it’s huge, 
// and some websites are built almost entirely with JavaScript. In order to make JavaScript more modular, 
// clean, and maintainable; ES6 introduced a way to easily share code among JavaScript files. This involves 
// exporting parts of a file for use in one or more other files, and importing the parts you need, where you 
// need them. In order to take advantage of this functionality, you need to create a script in your HTML 
// document with a type of module. Here’s an example:

<script type="module" src="filename.js"></script>

// If you want to export specific pieces of code to reuse in other files, you can use export:

export const add = (x, y) => {
  return x + y;
}
// The above is a common way to export a single function, but you can achieve the same thing like this:

const add = (x, y) => {
  return x + y;
}

export { add };

// When you export a variable or function, you can import it in another file and use it without having to 
// rewrite the code. You can export multiple things by repeating the first example for each thing you want 
// to export, or by placing them all in the export statement of the second example, like this:

export { add, subtract };
